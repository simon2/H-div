(%cinclude "<stdio.h>" "<stdlib>" "<math.h>" "<time.h>" (:macro NULL stdin stdout))
(%defconstant INPUT_DEFAULT "bem_data/input_50ms.txt")

((struct cluster)
    (def ndim int)
    (def nstrt int)
    (def nsize int)
    (def ndpth int)
    (def nnson int)
    (def nmbr int)
    (def ndscd int)
    (def bmin (ptr double))
    (def bmax (ptr double))
    (def zwdth double)
    (def pc_sons (ptr (ptr cluster)))
)
(deftype cluster (struct cluster))

((struct leafmtx)
    (def ltmtx int)
    (def kt int)
    (def nstrtl int)
    (def ndl int)
    (def nstrtt int)
    (def ndt int)
    (def a1 (ptr double))
    (def a2 (ptr double))
)
(deftype leafmtx (struct leafmtx))

((struct leafmtxp)
    (def nlf int)
    (def nlfkt int)
)
(deftype leafmtxp (struct leafmtxp))

(decl (supermatrix_construction_cog_leafmtrx st_leafmtxp gmid param lod lnmtx nofc nffc ndim) (fn void (ptr leafmtxp) (ptr (array double) 3) (array double) (ptr int) (ptr int) int int int)
(decl (med3 nl nr nlr2) (fn int int int int))
(decl (create_leafmtx st_leafmtx st_cltl st_cltt param lnmtx nffc nlf) (fn void (ptr leafmtx) (ptr cluster) (ptr cluster) (array double) (ptr int) int (ptr int)))
(decl (dist_2cluster st_cltl st_cltt) (fn double (ptr cluster) (ptr cluster)))
(decl (count_lntmx st_cltl st_cltt param lnmtx nffc) (fn void (ptr cluster) (ptr cluster) (array double) (ptr int) int))
(decl (cal_bndbox_cog st_clt zgmid lod nofc) (fn void (ptr cluster) (ptr (array double 3)) (ptr int) int))
(decl (set_bndbox_cog st_clt zgmid lod nofc) (fn void (ptr cluster) (ptr (array double 3)) (ptr int) int))
(decl (create_cluster nmbr ndpth nstrt nsize ndim nson) (fn (ptr cluster) int int int int int int))
(decl (free_st_clt st_clt) (fn void (ptr cluster)))
(decl (create_ctree_ssgeom st_clt zgmid param lod ndpth ndscd nsrt nd md ndim nclst) (fn (ptr cluster) (ptr cluster) (ptr (array double 3)) (array param) (ptr int) int int int int int int int))
(decl (get_wall_time) (fn double))

(decl depth_max int)
(decl count_node int)

(def (main argc argv) (fn int int (ptr (ptr char)))
    (def fname (ptr char))
    (def file (ptr FILE))
    (def coordOfNode (ptr (array double 3)))
    (def coordOfFace (ptr (array double 3)))
    (= fname (if-exp (>= argc 2) (aref argv 1) INPUT_DEFAULT))
    (= file (fopen fname "r"))
    (if (== file NULL)
        (begin 
	    (printf "Error: Unable to input file '%s'!\n" fname)
	    (exit 99)
	)
	(def line (array char 100))
	(fgets line (sizeof line) file)
	(sscanf line "%d" (ptr countOfNode))
	(= coordOfNode (cast (ptr (array double 3)) (malloc (* countOfNode (* 3 (sizeof double))))))
	(for ((= i 0) (< i countOfNode) (inc i))
	    (fgets line (sizeof line) file)
	    (def x double)
	    (def y double)
	    (def z double)
	    (sscanf line "%lf %lf %lf" (ptr x) (ptr y) (ptr z))
	    (= (aref coordOfNode i 0) x)
	    (= (aref coordOfNode i 1) y)
	    (= (aref coordOfNode i 2) z)
	)
	(fgets line (sizeof line) file)
	(sscanf line "%d" (ptr count))
	(= coordOfFace (cast (ptr (array double 3)) (malloc (* countOfNode (* 3 (sizeof double))))))

	(fgets line (sizeof line) file)
	(fgets line (sizeof line) file)
	(fgets line (sizeof line) file)

	(printf "count:%d\n" count)
	(for ((= i 0) (< i count) (inc i))
	    (fgets line (sizeof line) file)
	    (def X int)
	    (def Y int)
	    (def Z int)
	    (sscanf line "%d %d %d" (ptr X) (ptr Y) (ptr Z))
	    (= (aref coordOfFace i 0) (/ (+ (aref coordOfNode X 0) (+ (aref coordOfNode Y 0) (aref coordOfNode Z 0))) 3))
	    (= (aref coordOfFace i 1) (/ (+ (aref coordOfNode X 1) (+ (aref coordOfNode Y 1) (aref coordOfNode Z 1))) 3))
	    (= (aref coordOfFace i 2) (/ (+ (aref coordOfNode X 2) (+ (aref coordOfNode Y 2) (aref coordOfNode Z 2))) 3))
	)
    ))
    (fclose file)
    (free coordOfNode)
    (def param (array double 100))
    (for (= i 0) (< i 100) (inc i)
        (= (aref param i) 0)
    )
    (= (aref param 21) 10.0)
    (= (aref param 31) 1.1)
    (= (aref param 41) 15.0)
    (= (aref param 51) 2.0)

    (def st_leafmtxp (ptr leafmtxp))
    (def lod (ptr int))
    (def lnmtx (ptr int))
    (def nofc int)
    (= nofc count)
    (def nffc int)
    (= nffc 1)
    (def ndim 3)
    (= lnmtx (cast (ptr int) (malloc (* 3 (sizeof int)))))
    (for (= i 0) (< i 3) (inc i)
        (= (aref lnmtx i) 0)
    )
    (= st_leafmtxp (cast (ptr leafmtxp) (malloc (sizeof leafmtxp))))
    (= lod (cast (ptr int) (malloc (sizeof int))))
    (for (= i 0) (< i nofc) (inc i)
        (= (aref lod i) 0)
    )

    (supermatrix_construction_cog_leafmtrx st_leafmtxp coordOfFace param lod lnmtx nofc nffc ndim)

)

(def (supermatrix_construction_cog_leafmtrx st_leafmtxp gmid param lod lnmtx nofc nffc ndim) (fn void (ptr leafmtxp) (ptr (aref double 3)) (ptr int) (ptr int) int int int)
    (def st_clt (ptr cluster))
    (= (mref st_clt) (cast (ptr cluster) (malloc (sizeof cluster))))
    (def i int)
    (def nfl int)
    (def nflkt int)
    (def ip int)
    (def il int)
    (def ig int)
    (def nd int)
    (= nd (* nofc nffc))
    (def lodfc (ptr int))
    (def st_leafmtx (ptr leafmtx))
    (= lodfc (cast (ptr int) (malloc (* nofc (sizeof int)))))
    (for (= il 0) (< il nofc) (inc il)
        (= (aref lodfc il) il)
    )
    (def nsrt int)
    (def ndf int)
    (def nclst int)
    (def ndpth int)
    (def ndscd int)
    (= nsrt 0)
    (= ndf nofc)
    (= nclst 0)
    (= ndpth 0)
    (= ndscd 0)

    (= depth_max 0)
    (= count_node 0)

    (def start double)
    (def end double)
    (def spent double)
    (= start (get_wall_time))
    (= st_clt (create_ctree_ssgeom st_clt gmid param lodfc ndpth ndscd nsrt ndf nofc ndim nclst))
    (= end (get_wall_time))
    (= spent (- end start))
    (printf "cluster tree time spent:%.10f\n" spent)

    (set_bndbox_cog st_clt gmid lodfc nofc)
    
    (= ndpth 0)
    (= start (get_wall_time))
    (count_lntmx st_clt st_clt param lnmtx nffc)
    (= end (get_wall_time))
    (= spent (- end start))
    (printf "count time:%.10f\n" spent)

    (= (fref st_leafmtxp -> nlfkt) (aref lnmtx 0))
    (def nlf int)
    (= nlf (+ (aref lnmtx 0) (aref lnmtx 1)))
    (= st_leafmtx (cast (ptr leafmtx) (malloc (* nlf (sizeof leafmtx)))))
    (= (fref st_leafmtxp -> nlf) nlf)
    (printf "nlf:%d\n" nlf)

    (= nlf 0)
    (= start (get_wall_time))
    (create_leafmtx st_leafmtx st_clt st_clt param lnmtx nffc (ptr nlf))
    (= end (get_wall_time))
    (= spent (- end start))
    (printf "nlf:%d\n" nlf)
    (printf "block cluster tree time spent:%.10f\n" spent)
    (printf "depth_max:%d count_node:%d\n" depth_max count_node)
)

(def (med3 nl nr nlr2) (fn int int int int)
    (def med3 int)
    (if (< nl nr)
        (begin (if (< nr nlr2)
	    (begin (= med3 nr)))
	    (if (< nlr2 nl)
	        (begin (= med3 nl))
		(= med3 mlr2))
	)(if (< nlr2 nr)
	     (begin (= med3 nr))
	     (if (< nl nlr2)
	     	 (begin (= med3 nl))
		 (= med3 nlr2)
	     )
	 )
    )
    (return med3)
)

(def (create_leafmtx st_leafmtx st_cltl st_cltt param lnmtx nffc nlf) (fn void (ptr leafmtx) (ptr cluster) (ptr cluster) (array double) (ptr int) int (ptr int))
    (def ndl int)
    (def ndt int)
    (def nstrtl int)
    (def nstrtt int)
    (def nnsonl int)
    (def nnsont int)
    (def il int)
    (def it int)
    (= ndl (* (fref st_cltl -> nsize) nffc))
    (= ndt (* (fref st_cltt -> nsize) nffc))
    (= nstrtl (fref st_cltl -> nstrt))
    (= nstrtt (fref st_cltt -> nstrt))
    (= nnsonl (fref st_cltl -> nnson))
    (= nnsont (fref st_cltt -> nnson))

    (def nleaf double)
    (def zeta double)
    (def zdistlt double)
    (= nleaf (aref param 41))
    (= zeta (aref param 51))
    (= zdistlt (dist_2cluster st_cltl st_cltt))

    (if (and (or (<= (* (fref st_cltl -> zwdth) zeta) zdistlt) (<= (* (fref st_cltt -> zwdth) zeta) zdistlt)) (and (>= ndl nleaf) (>= ndt nleaf)))
        (begin 
	    (= (fref (aref st_leafmtx (mref nlf)) nstrtl) nstrtl)
	    (= (fref (aref st_leafmtx (mref nlf)) ndl) ndl)
	    (= (fref (aref st_leafmtx (mref nlf)) nstrtt) nstrtt)
            (= (fref (aref st_leafmtx (mref nlf)) ndt) ndt)
	    (= (fref (aref st_leafmtx (mref nlf)) kt) 0)
	    (= (fref (aref st_leafmtx (mref nlf)) ltmtx) 1)
	    (inc (mref nlf)))
	(if (or (== nnsonl 0) (or (== nnsont 0) (or (<= ndl nleaf) (<= ndt nleaf))))
	    (begin 
	        (= (fref (aref st_leafmtx (mref nlf)) nstrtl) nstrtl)
	    	(= (fref (aref st_leafmtx (mref nlf)) ndl) ndl)
	    	(= (fref (aref st_leafmtx (mref nlf)) nstrtt) nstrtt)
            	(= (fref (aref st_leafmtx (mref nlf)) ndt) ndt)
            	(= (fref (aref st_leafmtx (mref nlf)) ltmtx) 2)
	    	(inc (mref nlf))))
	    (for (= il 0) (< il nnsonl) (inc il) 
	        (for (= it 0) (< it nnsont) (inc it)
		    (creat_leafmtx st_leafmtx (aref (fref st_cltl -> pc_sons) il) (aref (fref st_cltt -> pc_sons) it) param lnmtx nffc nlf)
		)
	    )	
	)
    )
)

(def (dist_2cluster st_cltl st_cltt) (fn double (ptr cluster) (ptr cluster))
    (def zs double)
    (= zs 0.0)
    (def id int)
    (for (= id 0) (< id (fref st_cltl -> ndim)) (inc id)
        (if (< ï¼ˆaref (fref st_cltl -> bmax) id) (aref (fref st_cltt -> bmin) id)
	    (begin (= zs (+ zs (* (- (aref (fref st_cltt -> bmin) id) (aref (fref st_cltl -> bmax) id)) (- (aref (fref st_cltt -> bmin) id) (aref (fref st_cltl -> bmax) id))))))
	    (if (< (aref (fref st_cltt -> bmax) id) (aref (fref st_cltl -> bmin) id))
	        (begin (= zs (+ zs (* (- (aref (fref st_cltl -> bmin) id) (aref (fref st_cltt -> bmax) id)) (- (aref (fref st_cltl -> bmin) id) (aref (fref st_cltt -> bmax) id))))))
	    )
	)
    )
    (return (sqrt zs))
)

(def (count_lntmx st_cltl st_cltt param lnmtx nffc) (fn void (ptr cluster) (ptr cluster) (array param) (ptr int) int)
    (def il int)
    (def it int)
    (def ndl int)
    (def ndt int)
    (def nstrtl int)
    (def nstrtt int)
    (def nnsonl int)
    (def nnsont int)
    (= ndl (* (fref st_cltl -> nsize) nffc))
    (= ndt (* (fref st_cltt -> nsize) nffc))
    (= nstrtl (fref st_cltl -> nstrt))
    (= nstrtt (fref st_cltt -> nstrt))
    (= nnsonl (fref st_cltl -> nnson))
    (= nnsont (fref st_cltt -> nnson))
    
    (def nleaf double)
    (def zeta double)
    (def zdistlt double)
    (= nleaf (aref param 41))
    (= zeta (aref param 51))
    (= zdistlt (dist_2cluster st_cltl st_cltt))

    (if (and (or (<= (* (fref st_cltl -> zwdth) zeta) zdistlt) (<= (* (fref st_cltt -> zwdth) zeta) zdistlt)) (and (>= ndl nleaf) (>= ndt nleaf)))
        (begin (inc (aref lnmtx 0)))
	(if (or (== nnsonl 0) (or (== nnsont 0) (or (<= ndl nleaf) (<= ndt nleaf))))
	    (begin (inc (aref lnmtx 1)))
	    (inc (aref lnmtx 2))
	    (for (= il 0) (< il nnsonl) (inc il) 
	        (for (= it 0) (< it nnsont) (inc it) 
		    (count_lntmx (aref (fref st_cltl -> pc_sons) il) (aref (fref st_cltt -> pc_sons) it) param lnmtx nffc)
		)
	    )
	)
    )
)

(def (cal_bndbox_cog st_clt zgmid lod nofc) (fn void (ptr cluster) (ptr (array double 3)) (ptr int) int)
    (def ndim int)
    (= ndim (fref st_clt -> ndim))
    (= (fref st_clt -> bmin) (cast (ptr double) (malloc (* 3 (sizeof double)))))
    (= (fref st_clt -> bmax) (cast (ptr double) (malloc (* 3 (sizeof double)))))
    (def zeps double)
    (= zeps 1.0e-5)
    (if (> (fref st_clt -> nnson) 0)
        (begin (for (= id 0) (< id ndim) (inc id) 
	           (= (aref (fref st_clt -> bmin) id) (aref (fref (aref (fref st_clt -> pc_sons) 0) -> bmin) id))
		   (= (aref (fref st_clt -> bmax) id) (aref (fref (aref (fref st_clt -> pc_sons) 0) -> bmax) id))
	       )
	       (for (= il 1) (< il (fref st_clt -> nnson)) (inc il)
	           (for (= id 0) (< id ndim) (inc id)
		       (if (< (aref (fref (aref (fref st_clt -> sons) il) -> bmin) id) (aref (fref st_clt -> bmin) id))
		           (begin (= (aref (fref st_clt -> bmin) id) (aref (fref (aref (fref st_clt -> pc_sons) il) -> bmax) id)))
		       )
		       (if (< (aref (fref st_clt -> bmax) id) (aref (fref (aref (fref st_clt -> sons) il) -> bmax) id))
  		           (begin (= (aref (fref st_clt -> bmax) id) (aref (fref (aref (fref st_clt -> pc_sons) il) -> bmax) id)))
                       )
		   )
	       )
	)
	(for (= id 0) (< id ndim) (inc id)
	    (= (aref (fref st_clt -> bmin) id) (aref zgmid (aref lod 0) id))
	    (= (aref (fref st_clt -> bmax) id) (aref zgmid (aref lod 0) id))
	)
	(for (= id 0) (< id ndim) (inc id)
	    (for (= il 1) (< il (fref st_clt -> nsize)) (inc il)
	        (if (< (aref zgmid (aref lod il) id) (aref (fref st_clt -> bmin) id))
		    (begin (= (aref (fref st_clt -> bmin) id) (aref zgmid (aref lod il) id)))
		)
		(if (< (aref (fref st_clt -> bmax) id) (aref zgmid (aref lod il) id))
		    (begin (= (aref (fref st_clt -> bmax) id) (aref zgmid (aref lod il) id)))
		)
	    )
	)
    )
    (def zwdth double)
    (= zwdth (* (- (aref (fref st_clt -> bmax) 0) (aref (fref st_clt -> bmin) 0)) (- (aref (fref st_clt -> bmax) 0) (aref (fref st_clt -> bmin) 0))))
    (for (= id 1) (< id ndim) (inc id)
        (= zwdth (+ zwdth (* (- (aref (fref st_clt -> bmax) id) (aref (fref st_clt -> bmin) id)) (- (aref (fref st_clt -> bmax) id) (aref (fref st_clt -> bmin) id)))))
    )
    (= zwdth (sqrt zwdth))
    (for (= 1 id) (< id ndim) (inc id)
        (= zwdth (* (- (aref (fref st_clt -> bmax) id) (aref (fref st_clt -> bmin) id)) (- (aref (fref st_clt -> bmax) id) (aref (fref st_clt -> bmin) id))))
    )
    (= (fref st_clt -> zwdth) (sqrt zwdth))
)

(def (set_bndbox_cog st_clt zgmid lod nofc) (fn void (ptr cluster) (ptr (array double 3)) (ptr int) int)
    (def ic int)
    (def l int)
    
    (for (= ic 0) (< ic (fref st_clt -> nnson)) (inc ic)
       if((== ic 0)
           (begin (= l 0))
	   (= l (+ l (fref (aref (fref st_clt -> pc_sons) ic) -> size)))
       )
       (set_bndbox_cog (aref (fref st_clt -> pc_sons) ic) zgmid (ptr (aref lod l)) nofc)
       (cal_bndbox_cog st_clt zgmid lod nofc)
    )
)

(def (create_cluster nmbr ndpth nstrt nsize ndim nson) (fn (ptr cluster) int int int int int int)
    (def st_clt (ptr cluster))
    (= st_clt (cast (ptr cluster) (malloc (sizeof cluster))))
    (inc nmbr)
    (= (fref st_clt -> nstrt) nstrt)
    (= (fref st_clt -> nsize) nsize)
    (= (fref st_clt -> ndim) ndim)
    (= (fref st_clt -> nnson) nson)
    (= (fref st_clt -> nmbr) nmbr)
    (= (fref st_clt -> ndpth) ndpth)
    (= (fref st_clt -> pc_sons) (cast (ptr (ptr cluster)) (malloc (* nson (sizeof (ptr cluster))))))

    (return st_clt)
)

(def (free_st_clt st_clt) (fn void (ptr cluster))
    (def ic int)
    (def nnson int)
    (= nnson (fref st_clt -> nnson))
    (for (= ic 0) (< ic nnson) (inc ic)
        (free_st_clt (aref (fref st_clt -> pc_sons) ic))
    )
    (free (fref st_clt -> bmin))
    (free (fref st_clt -> bmax))
    (free (fref st_clt -> pc_sons))
)

(def (create_ctree_ssgeom st_clt zgmid param lod ndpth ndscd nsrt nd md ndim nclst) (fn (ptr cluster) (ptr cluster) (ptr (array double 3)) (array param) (ptr int) int int int int int int int)
    (def id int)
    (def il int)
    (def nson int)
    (def minsz double)
    (def zcoef double)
    (def zlmin (array double ndim))
    (def zlmax (array double ndim))
    (= minsz (aref param 21))
    (= zcoef (aref param 31))

    (inc ndpth)
    (if (<= nd minsz)
        (begin
	    (= nson 0)
	    (= st_clt (create_cluster nclst ndpth nsrt nd ndim nson))
	    (if (> ndpth depth_max)
	        (= depth_max ndpth)
	    )
	    (inc count_node)
	)
	(for (= id 0) (< id ndim) (inc id)
	    (= (aref zlmin id) (aref zgmid (aref lod 0) id))
	    (= (aref zlmax id) (aref zlmin id))
	    (for (= il 1) (< il nd) (inc il)
	        (def zg double)
		(= zg (aref zgmid (aref lod il) id))
		(if (< zg (aref zlmin il))
		    (begin (= (aref zlmin id) zg))
		    (if (< (aref zlmax id) zg)
		        (begin (= (aref zlmax id) zg))
		    )
		)
	    )
	)
	(def zdiff double)
	(= zdiff (- (aref zlmax 0) (aref zlmin 0)))
	(def ncut int)
	(= ncut 0)
	(for (= id 0) (< id ndim) (inc id)
	    (def zidiff double)
	    (= zidiff (- (aref zlmax id) (aref zlmin id)))
	    (if (> zidiff (* zcoef zdiff))
	        (= zdiff zidiff)
		(= ncut id)
	    )
	)
	(def zlmid double)
	(= zlmid (* 0.5 (+ (aref zlmax ncut) (aref zlmin ncut))))
	(def nl int)
	(def nr int)
	(= nl 0)
	(= nr nd-1)
	(while (< nl nr)
	    (while (and (< nl nd) (<= (aref zgmid (aref lod nl) ncut) zlmid))
	        (inc nl)
	    )
	    (while (and (>= nr 0) (> (aref zgmid (aref lod nr) ncut) zlmid))
	        (dec nr)
	    )
	    (if (< nl nr)
	        (def nh int)
		(= nh (aref lod nl))
		(= (aref lod nl) (aref lod nr))
		(= (aref lod nr) nh)
	    )
	)
	(if (or (== nl nd) (== nl 0))
	    (begin 
	        (= nson 1)
	    	(= st_clt (create_cluster nclst ndpth nsrt nd ndim nson))
		(if (> ndpth depth_max)
		    (= depth_max ndpth)
		)
		(inc count_node)
		(= (aref (fref st_clt -> pc_sons) 0) (create_ctree_ssgeom (aref (fref st_clt -> pc_sons) 0) gmid param lod ndpth ndscd nsrt nd md ndim nclst)
	    )
	    (= nson 2)
	    (= st_clt (creat_cluster nclst ndpth nsrt nd ndim nson))
	    (if (> ndpth ndpth_max)
	        (begin (= depth_max  ndpth))
	    )
	    (inc count_node)
	    (def nsrt1 int)
	    (def nd1 int)
	    (= nsrt1 nsrt)
	    (= nd1 nl)
	    (= (aref (fref st_clt -> pc_sons) 0) (create_ctree_ssgeom (aref (fref st_clt -> pc_sons) 0) zgmid param lod ndpth ndscd nsrt1 nd1 md ndim nclst))

	    (= nsrt1 (+ nsrt nl))
	    (= nd1 (- nd nl))
	    (= (aref (fref st_clt -> pc_sons) 1) (create_ctree_ssgeom (aref (fref st_clt -> pc_sons) 1) zgmid param (ptr (aref lod nl)) ndpth ndscd nsrt1 nd1 md ndim nclst))
	)
    )
    (= (fref st_clt -> ndscd) nd)
    (return st_clt)
)

(def (get_wall_time) (fn double)
    (def time (struct timeval))
    (if (gettimeofday (ptr time) NULL)
        (begin (return 0))
    )
    (return (+ (cast double (fref time tv_sec)) (cast double (* (fref time tv_usec) 0.000001))))
)